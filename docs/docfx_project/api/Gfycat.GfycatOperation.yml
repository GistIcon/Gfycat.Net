### YamlMime:ManagedReference
items:
- uid: Gfycat.GfycatOperation
  commentId: T:Gfycat.GfycatOperation
  id: GfycatOperation
  parent: Gfycat
  children:
  - Gfycat.GfycatOperation.#ctor(Gfycat.Operation,Gfycat.OperationPath,System.Object)
  - Gfycat.GfycatOperation.Operation
  - Gfycat.GfycatOperation.Path
  - Gfycat.GfycatOperation.Value
  langs:
  - csharp
  - vb
  name: GfycatOperation
  nameWithType: GfycatOperation
  fullName: Gfycat.GfycatOperation
  type: Class
  source:
    id: GfycatOperation
    path: ''
    startLine: 2892
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nSpecifies an operation to modify a part of the current user's setting. See \"http://developers.gfycat.com/api/#updating-user-39-s-details\" for details on valid operation combinations\n"
  remarks: See http://developers.gfycat.com/api/#updating-user-39-s-details for details on valid operations
  example: []
  syntax:
    content: public class GfycatOperation
    content.vb: Public Class GfycatOperation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Gfycat.GfycatOperation.#ctor(Gfycat.Operation,Gfycat.OperationPath,System.Object)
  commentId: M:Gfycat.GfycatOperation.#ctor(Gfycat.Operation,Gfycat.OperationPath,System.Object)
  id: '#ctor(Gfycat.Operation,Gfycat.OperationPath,System.Object)'
  parent: Gfycat.GfycatOperation
  langs:
  - csharp
  - vb
  name: GfycatOperation(Operation, OperationPath, Object)
  nameWithType: GfycatOperation.GfycatOperation(Operation, OperationPath, Object)
  fullName: Gfycat.GfycatOperation.GfycatOperation(Gfycat.Operation, Gfycat.OperationPath, System.Object)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2900
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nConstructs a new operation with the given operation, path, and value\n"
  example: []
  syntax:
    content: public GfycatOperation(Operation op, OperationPath path, object value)
    parameters:
    - id: op
      type: Gfycat.Operation
      description: ''
    - id: path
      type: Gfycat.OperationPath
      description: ''
    - id: value
      type: System.Object
      description: ''
    content.vb: Public Sub New(op As Operation, path As OperationPath, value As Object)
  overload: Gfycat.GfycatOperation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gfycat.GfycatOperation.Operation
  commentId: P:Gfycat.GfycatOperation.Operation
  id: Operation
  parent: Gfycat.GfycatOperation
  langs:
  - csharp
  - vb
  name: Operation
  nameWithType: GfycatOperation.Operation
  fullName: Gfycat.GfycatOperation.Operation
  type: Property
  source:
    id: Operation
    path: ''
    startLine: 2910
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nSets the operation to perform on the specified path\n"
  example: []
  syntax:
    content: public Operation Operation { get; set; }
    parameters: []
    return:
      type: Gfycat.Operation
    content.vb: Public Property Operation As Operation
  overload: Gfycat.GfycatOperation.Operation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Gfycat.GfycatOperation.Path
  commentId: P:Gfycat.GfycatOperation.Path
  id: Path
  parent: Gfycat.GfycatOperation
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: GfycatOperation.Path
  fullName: Gfycat.GfycatOperation.Path
  type: Property
  source:
    id: Path
    path: ''
    startLine: 2949
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nThe item to edit in this operation\n"
  example: []
  syntax:
    content: public OperationPath Path { get; set; }
    parameters: []
    return:
      type: Gfycat.OperationPath
    content.vb: Public Property Path As OperationPath
  overload: Gfycat.GfycatOperation.Path*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Gfycat.GfycatOperation.Value
  commentId: P:Gfycat.GfycatOperation.Value
  id: Value
  parent: Gfycat.GfycatOperation
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: GfycatOperation.Value
  fullName: Gfycat.GfycatOperation.Value
  type: Property
  source:
    id: Value
    path: ''
    startLine: 2955
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nThe new value for this operation\n"
  example: []
  syntax:
    content: public object Value { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Value As Object
  overload: Gfycat.GfycatOperation.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Gfycat
  commentId: N:Gfycat
  isExternal: false
  name: Gfycat
  nameWithType: Gfycat
  fullName: Gfycat
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Gfycat.GfycatOperation.#ctor*
  commentId: Overload:Gfycat.GfycatOperation.#ctor
  isExternal: false
  name: GfycatOperation
  nameWithType: GfycatOperation.GfycatOperation
  fullName: Gfycat.GfycatOperation.GfycatOperation
- uid: Gfycat.Operation
  commentId: T:Gfycat.Operation
  parent: Gfycat
  isExternal: false
  name: Operation
  nameWithType: Operation
  fullName: Gfycat.Operation
- uid: Gfycat.OperationPath
  commentId: T:Gfycat.OperationPath
  parent: Gfycat
  isExternal: false
  name: OperationPath
  nameWithType: OperationPath
  fullName: Gfycat.OperationPath
- uid: Gfycat.GfycatOperation.Operation*
  commentId: Overload:Gfycat.GfycatOperation.Operation
  isExternal: false
  name: Operation
  nameWithType: GfycatOperation.Operation
  fullName: Gfycat.GfycatOperation.Operation
- uid: Gfycat.GfycatOperation.Path*
  commentId: Overload:Gfycat.GfycatOperation.Path
  isExternal: false
  name: Path
  nameWithType: GfycatOperation.Path
  fullName: Gfycat.GfycatOperation.Path
- uid: Gfycat.GfycatOperation.Value*
  commentId: Overload:Gfycat.GfycatOperation.Value
  isExternal: false
  name: Value
  nameWithType: GfycatOperation.Value
  fullName: Gfycat.GfycatOperation.Value
