### YamlMime:ManagedReference
items:
- uid: Gfycat.IFolder
  commentId: T:Gfycat.IFolder
  id: IFolder
  parent: Gfycat
  children:
  - Gfycat.IFolder.DeleteAsync(Gfycat.RequestOptions)
  - Gfycat.IFolder.Id
  - Gfycat.IFolder.ModifyTitleAsync(System.String,Gfycat.RequestOptions)
  - Gfycat.IFolder.Title
  langs:
  - csharp
  - vb
  name: IFolder
  nameWithType: IFolder
  fullName: Gfycat.IFolder
  type: Interface
  source:
    id: IFolder
    path: ''
    startLine: 3401
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nDefines a basic Gfycat folder with an id and title\n"
  example: []
  syntax:
    content: public interface IFolder
    content.vb: Public Interface IFolder
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Gfycat.IFolder.Id
  commentId: P:Gfycat.IFolder.Id
  id: Id
  parent: Gfycat.IFolder
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IFolder.Id
  fullName: Gfycat.IFolder.Id
  type: Property
  source:
    id: Id
    path: ''
    startLine: 3406
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the id of this Gfycat folder\n"
  example: []
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Gfycat.IFolder.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Gfycat.IFolder.Title
  commentId: P:Gfycat.IFolder.Title
  id: Title
  parent: Gfycat.IFolder
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: IFolder.Title
  fullName: Gfycat.IFolder.Title
  type: Property
  source:
    id: Title
    path: ''
    startLine: 3411
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the title of this Gfycat folder\n"
  example: []
  syntax:
    content: string Title { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Title As String
  overload: Gfycat.IFolder.Title*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Gfycat.IFolder.ModifyTitleAsync(System.String,Gfycat.RequestOptions)
  commentId: M:Gfycat.IFolder.ModifyTitleAsync(System.String,Gfycat.RequestOptions)
  id: ModifyTitleAsync(System.String,Gfycat.RequestOptions)
  parent: Gfycat.IFolder
  langs:
  - csharp
  - vb
  name: ModifyTitleAsync(String, RequestOptions)
  nameWithType: IFolder.ModifyTitleAsync(String, RequestOptions)
  fullName: Gfycat.IFolder.ModifyTitleAsync(System.String, Gfycat.RequestOptions)
  type: Method
  source:
    id: ModifyTitleAsync
    path: ''
    startLine: 3419
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nChanges the title of this folder to the provided string\n"
  example: []
  syntax:
    content: Task ModifyTitleAsync(string newTitle, RequestOptions options = null)
    parameters:
    - id: newTitle
      type: System.String
      description: ''
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Function ModifyTitleAsync(newTitle As String, options As RequestOptions = Nothing) As Task
  overload: Gfycat.IFolder.ModifyTitleAsync*
- uid: Gfycat.IFolder.DeleteAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.IFolder.DeleteAsync(Gfycat.RequestOptions)
  id: DeleteAsync(Gfycat.RequestOptions)
  parent: Gfycat.IFolder
  langs:
  - csharp
  - vb
  name: DeleteAsync(RequestOptions)
  nameWithType: IFolder.DeleteAsync(RequestOptions)
  fullName: Gfycat.IFolder.DeleteAsync(Gfycat.RequestOptions)
  type: Method
  source:
    id: DeleteAsync
    path: ''
    startLine: 3426
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nDeletes this folder on Gfycat\n"
  example: []
  syntax:
    content: Task DeleteAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Function DeleteAsync(options As RequestOptions = Nothing) As Task
  overload: Gfycat.IFolder.DeleteAsync*
references:
- uid: Gfycat
  commentId: N:Gfycat
  isExternal: false
  name: Gfycat
  nameWithType: Gfycat
  fullName: Gfycat
- uid: Gfycat.IFolder.Id*
  commentId: Overload:Gfycat.IFolder.Id
  isExternal: false
  name: Id
  nameWithType: IFolder.Id
  fullName: Gfycat.IFolder.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Gfycat.IFolder.Title*
  commentId: Overload:Gfycat.IFolder.Title
  isExternal: false
  name: Title
  nameWithType: IFolder.Title
  fullName: Gfycat.IFolder.Title
- uid: Gfycat.IFolder.ModifyTitleAsync*
  commentId: Overload:Gfycat.IFolder.ModifyTitleAsync
  isExternal: false
  name: ModifyTitleAsync
  nameWithType: IFolder.ModifyTitleAsync
  fullName: Gfycat.IFolder.ModifyTitleAsync
- uid: Gfycat.RequestOptions
  commentId: T:Gfycat.RequestOptions
  parent: Gfycat
  isExternal: false
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Gfycat.RequestOptions
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Gfycat.IFolder.DeleteAsync*
  commentId: Overload:Gfycat.IFolder.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: IFolder.DeleteAsync
  fullName: Gfycat.IFolder.DeleteAsync
