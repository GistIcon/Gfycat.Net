### YamlMime:ManagedReference
items:
- uid: Gfycat.Analytics.GfycatAnalyticsClient
  commentId: T:Gfycat.Analytics.GfycatAnalyticsClient
  id: GfycatAnalyticsClient
  parent: Gfycat.Analytics
  children:
  - Gfycat.Analytics.GfycatAnalyticsClient.#ctor(Gfycat.Analytics.GfycatAnalyticsClientConfig,System.String)
  - Gfycat.Analytics.GfycatAnalyticsClient.#ctor(System.String,System.String,Version,System.String)
  - Gfycat.Analytics.GfycatAnalyticsClient.CurrentUserTrackingCookie
  - Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionAsync(Gfycat.Analytics.Impression,Gfycat.RequestOptions)
  - Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionAsync(Gfycat.Gfy,Gfycat.Analytics.ImpressionContext,Gfycat.Analytics.ImpressionFlow,System.String,System.String,Gfycat.RequestOptions)
  - Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionsBulkAsync(IEnumerable{Gfycat.Analytics.Impression},Gfycat.RequestOptions)
  langs:
  - csharp
  - vb
  name: GfycatAnalyticsClient
  nameWithType: GfycatAnalyticsClient
  fullName: Gfycat.Analytics.GfycatAnalyticsClient
  type: Class
  source:
    id: GfycatAnalyticsClient
    path: ''
    startLine: 6286
  assemblies:
  - cs.temp.dll
  namespace: Gfycat.Analytics
  summary: "\nRepresents a client for communicating with the Gfycat analytics API. See https://developers.gfycat.com/analytics for info on when to use this client\n"
  example: []
  syntax:
    content: public class GfycatAnalyticsClient
    content.vb: Public Class GfycatAnalyticsClient
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Gfycat.Analytics.GfycatAnalyticsClient.CurrentUserTrackingCookie
  commentId: P:Gfycat.Analytics.GfycatAnalyticsClient.CurrentUserTrackingCookie
  id: CurrentUserTrackingCookie
  parent: Gfycat.Analytics.GfycatAnalyticsClient
  langs:
  - csharp
  - vb
  name: CurrentUserTrackingCookie
  nameWithType: GfycatAnalyticsClient.CurrentUserTrackingCookie
  fullName: Gfycat.Analytics.GfycatAnalyticsClient.CurrentUserTrackingCookie
  type: Property
  source:
    id: CurrentUserTrackingCookie
    path: ''
    startLine: 6293
  assemblies:
  - cs.temp.dll
  namespace: Gfycat.Analytics
  summary: "\nGets the current user's tracking cookie\n"
  example: []
  syntax:
    content: public string CurrentUserTrackingCookie { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CurrentUserTrackingCookie As String
  overload: Gfycat.Analytics.GfycatAnalyticsClient.CurrentUserTrackingCookie*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.Analytics.GfycatAnalyticsClient.#ctor(System.String,System.String,Version,System.String)
  commentId: M:Gfycat.Analytics.GfycatAnalyticsClient.#ctor(System.String,System.String,Version,System.String)
  id: '#ctor(System.String,System.String,Version,System.String)'
  parent: Gfycat.Analytics.GfycatAnalyticsClient
  langs:
  - csharp
  - vb
  name: GfycatAnalyticsClient(String, String, Version, String)
  nameWithType: GfycatAnalyticsClient.GfycatAnalyticsClient(String, String, Version, String)
  fullName: Gfycat.Analytics.GfycatAnalyticsClient.GfycatAnalyticsClient(System.String, System.String, Version, System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 6302
  assemblies:
  - cs.temp.dll
  namespace: Gfycat.Analytics
  summary: "\nCreates a new client using the specified app name, app Id, app version, and user tracking cookie\n"
  example: []
  syntax:
    content: public GfycatAnalyticsClient(string appName, string appId, Version appVersion, string userTrackingCookie)
    parameters:
    - id: appName
      type: System.String
      description: ''
    - id: appId
      type: System.String
      description: ''
    - id: appVersion
      type: Version
      description: ''
    - id: userTrackingCookie
      type: System.String
      description: ''
    content.vb: Public Sub New(appName As String, appId As String, appVersion As Version, userTrackingCookie As String)
  overload: Gfycat.Analytics.GfycatAnalyticsClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gfycat.Analytics.GfycatAnalyticsClient.#ctor(Gfycat.Analytics.GfycatAnalyticsClientConfig,System.String)
  commentId: M:Gfycat.Analytics.GfycatAnalyticsClient.#ctor(Gfycat.Analytics.GfycatAnalyticsClientConfig,System.String)
  id: '#ctor(Gfycat.Analytics.GfycatAnalyticsClientConfig,System.String)'
  parent: Gfycat.Analytics.GfycatAnalyticsClient
  langs:
  - csharp
  - vb
  name: GfycatAnalyticsClient(GfycatAnalyticsClientConfig, String)
  nameWithType: GfycatAnalyticsClient.GfycatAnalyticsClient(GfycatAnalyticsClientConfig, String)
  fullName: Gfycat.Analytics.GfycatAnalyticsClient.GfycatAnalyticsClient(Gfycat.Analytics.GfycatAnalyticsClientConfig, System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 6313
  assemblies:
  - cs.temp.dll
  namespace: Gfycat.Analytics
  summary: "\nCreates a new client using the specified config and user tracking cookie\n"
  example: []
  syntax:
    content: public GfycatAnalyticsClient(GfycatAnalyticsClientConfig config, string userTrackingCookie)
    parameters:
    - id: config
      type: Gfycat.Analytics.GfycatAnalyticsClientConfig
      description: ''
    - id: userTrackingCookie
      type: System.String
      description: ''
    content.vb: Public Sub New(config As GfycatAnalyticsClientConfig, userTrackingCookie As String)
  overload: Gfycat.Analytics.GfycatAnalyticsClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionAsync(Gfycat.Gfy,Gfycat.Analytics.ImpressionContext,Gfycat.Analytics.ImpressionFlow,System.String,System.String,Gfycat.RequestOptions)
  commentId: M:Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionAsync(Gfycat.Gfy,Gfycat.Analytics.ImpressionContext,Gfycat.Analytics.ImpressionFlow,System.String,System.String,Gfycat.RequestOptions)
  id: SendImpressionAsync(Gfycat.Gfy,Gfycat.Analytics.ImpressionContext,Gfycat.Analytics.ImpressionFlow,System.String,System.String,Gfycat.RequestOptions)
  parent: Gfycat.Analytics.GfycatAnalyticsClient
  langs:
  - csharp
  - vb
  name: SendImpressionAsync(Gfy, ImpressionContext, ImpressionFlow, String, String, RequestOptions)
  nameWithType: GfycatAnalyticsClient.SendImpressionAsync(Gfy, ImpressionContext, ImpressionFlow, String, String, RequestOptions)
  fullName: Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionAsync(Gfycat.Gfy, Gfycat.Analytics.ImpressionContext, Gfycat.Analytics.ImpressionFlow, System.String, System.String, Gfycat.RequestOptions)
  type: Method
  source:
    id: SendImpressionAsync
    path: ''
    startLine: 6375
  assemblies:
  - cs.temp.dll
  namespace: Gfycat.Analytics
  summary: "\nSends an impression using the specified gfy, context, flow, view tag, and keyword\n"
  example: []
  syntax:
    content: public Task SendImpressionAsync(Gfy gfy, ImpressionContext context = ImpressionContext.None, ImpressionFlow flow = ImpressionFlow.None, string viewTag = null, string keyword = null, RequestOptions options = null)
    parameters:
    - id: gfy
      type: Gfycat.Gfy
      description: ''
    - id: context
      type: Gfycat.Analytics.ImpressionContext
      description: ''
    - id: flow
      type: Gfycat.Analytics.ImpressionFlow
      description: ''
    - id: viewTag
      type: System.String
      description: ''
    - id: keyword
      type: System.String
      description: ''
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Public Function SendImpressionAsync(gfy As Gfy, context As ImpressionContext = ImpressionContext.None, flow As ImpressionFlow = ImpressionFlow.None, viewTag As String = Nothing, keyword As String = Nothing, options As RequestOptions = Nothing) As Task
  overload: Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionAsync(Gfycat.Analytics.Impression,Gfycat.RequestOptions)
  commentId: M:Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionAsync(Gfycat.Analytics.Impression,Gfycat.RequestOptions)
  id: SendImpressionAsync(Gfycat.Analytics.Impression,Gfycat.RequestOptions)
  parent: Gfycat.Analytics.GfycatAnalyticsClient
  langs:
  - csharp
  - vb
  name: SendImpressionAsync(Impression, RequestOptions)
  nameWithType: GfycatAnalyticsClient.SendImpressionAsync(Impression, RequestOptions)
  fullName: Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionAsync(Gfycat.Analytics.Impression, Gfycat.RequestOptions)
  type: Method
  source:
    id: SendImpressionAsync
    path: ''
    startLine: 6393
  assemblies:
  - cs.temp.dll
  namespace: Gfycat.Analytics
  summary: "\nSends one impression to Gfycat impressions\n"
  example: []
  syntax:
    content: public Task SendImpressionAsync(Impression impression, RequestOptions options = null)
    parameters:
    - id: impression
      type: Gfycat.Analytics.Impression
      description: ''
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Public Function SendImpressionAsync(impression As Impression, options As RequestOptions = Nothing) As Task
  overload: Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionsBulkAsync(IEnumerable{Gfycat.Analytics.Impression},Gfycat.RequestOptions)
  commentId: M:Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionsBulkAsync(IEnumerable{Gfycat.Analytics.Impression},Gfycat.RequestOptions)
  id: SendImpressionsBulkAsync(IEnumerable{Gfycat.Analytics.Impression},Gfycat.RequestOptions)
  parent: Gfycat.Analytics.GfycatAnalyticsClient
  langs:
  - csharp
  - vb
  name: SendImpressionsBulkAsync(IEnumerable<Impression>, RequestOptions)
  nameWithType: GfycatAnalyticsClient.SendImpressionsBulkAsync(IEnumerable<Impression>, RequestOptions)
  fullName: Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionsBulkAsync(IEnumerable<Gfycat.Analytics.Impression>, Gfycat.RequestOptions)
  type: Method
  source:
    id: SendImpressionsBulkAsync
    path: ''
    startLine: 6404
  assemblies:
  - cs.temp.dll
  namespace: Gfycat.Analytics
  summary: "\nSends multiple impressions to Gfycat impressions\n"
  example: []
  syntax:
    content: public Task SendImpressionsBulkAsync(IEnumerable<Impression> impressions, RequestOptions options = null)
    parameters:
    - id: impressions
      type: IEnumerable{Gfycat.Analytics.Impression}
      description: ''
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Public Function SendImpressionsBulkAsync(impressions As IEnumerable(Of Impression), options As RequestOptions = Nothing) As Task
  overload: Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionsBulkAsync*
  nameWithType.vb: GfycatAnalyticsClient.SendImpressionsBulkAsync(IEnumerable(Of Impression), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionsBulkAsync(IEnumerable(Of Gfycat.Analytics.Impression), Gfycat.RequestOptions)
  name.vb: SendImpressionsBulkAsync(IEnumerable(Of Impression), RequestOptions)
references:
- uid: Gfycat.Analytics
  commentId: N:Gfycat.Analytics
  isExternal: false
  name: Gfycat.Analytics
  nameWithType: Gfycat.Analytics
  fullName: Gfycat.Analytics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Gfycat.Analytics.GfycatAnalyticsClient.CurrentUserTrackingCookie*
  commentId: Overload:Gfycat.Analytics.GfycatAnalyticsClient.CurrentUserTrackingCookie
  isExternal: false
  name: CurrentUserTrackingCookie
  nameWithType: GfycatAnalyticsClient.CurrentUserTrackingCookie
  fullName: Gfycat.Analytics.GfycatAnalyticsClient.CurrentUserTrackingCookie
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Gfycat.Analytics.GfycatAnalyticsClient.#ctor*
  commentId: Overload:Gfycat.Analytics.GfycatAnalyticsClient.#ctor
  isExternal: false
  name: GfycatAnalyticsClient
  nameWithType: GfycatAnalyticsClient.GfycatAnalyticsClient
  fullName: Gfycat.Analytics.GfycatAnalyticsClient.GfycatAnalyticsClient
- uid: Version
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: Version
- uid: Gfycat.Analytics.GfycatAnalyticsClientConfig
  commentId: T:Gfycat.Analytics.GfycatAnalyticsClientConfig
  parent: Gfycat.Analytics
  isExternal: false
  name: GfycatAnalyticsClientConfig
  nameWithType: GfycatAnalyticsClientConfig
  fullName: Gfycat.Analytics.GfycatAnalyticsClientConfig
- uid: Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionAsync*
  commentId: Overload:Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionAsync
  isExternal: false
  name: SendImpressionAsync
  nameWithType: GfycatAnalyticsClient.SendImpressionAsync
  fullName: Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionAsync
- uid: Gfycat.Gfy
  commentId: T:Gfycat.Gfy
  parent: Gfycat
  isExternal: false
  name: Gfy
  nameWithType: Gfy
  fullName: Gfycat.Gfy
- uid: Gfycat.Analytics.ImpressionContext
  commentId: T:Gfycat.Analytics.ImpressionContext
  parent: Gfycat.Analytics
  isExternal: false
  name: ImpressionContext
  nameWithType: ImpressionContext
  fullName: Gfycat.Analytics.ImpressionContext
- uid: Gfycat.Analytics.ImpressionFlow
  commentId: T:Gfycat.Analytics.ImpressionFlow
  parent: Gfycat.Analytics
  isExternal: false
  name: ImpressionFlow
  nameWithType: ImpressionFlow
  fullName: Gfycat.Analytics.ImpressionFlow
- uid: Gfycat.RequestOptions
  commentId: T:Gfycat.RequestOptions
  parent: Gfycat
  isExternal: false
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Gfycat.RequestOptions
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Gfycat
  commentId: N:Gfycat
  isExternal: false
  name: Gfycat
  nameWithType: Gfycat
  fullName: Gfycat
- uid: Gfycat.Analytics.Impression
  commentId: T:Gfycat.Analytics.Impression
  parent: Gfycat.Analytics
  isExternal: false
  name: Impression
  nameWithType: Impression
  fullName: Gfycat.Analytics.Impression
- uid: Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionsBulkAsync*
  commentId: Overload:Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionsBulkAsync
  isExternal: false
  name: SendImpressionsBulkAsync
  nameWithType: GfycatAnalyticsClient.SendImpressionsBulkAsync
  fullName: Gfycat.Analytics.GfycatAnalyticsClient.SendImpressionsBulkAsync
- uid: IEnumerable{Gfycat.Analytics.Impression}
  commentId: '!:IEnumerable{Gfycat.Analytics.Impression}'
  definition: IEnumerable`1
  name: IEnumerable<Impression>
  nameWithType: IEnumerable<Impression>
  fullName: IEnumerable<Gfycat.Analytics.Impression>
  nameWithType.vb: IEnumerable(Of Impression)
  fullName.vb: IEnumerable(Of Gfycat.Analytics.Impression)
  name.vb: IEnumerable(Of Impression)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Gfycat.Analytics.Impression
    name: Impression
    nameWithType: Impression
    fullName: Gfycat.Analytics.Impression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Gfycat.Analytics.Impression
    name: Impression
    nameWithType: Impression
    fullName: Gfycat.Analytics.Impression
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
