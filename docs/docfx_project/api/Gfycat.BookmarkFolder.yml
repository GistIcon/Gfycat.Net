### YamlMime:ManagedReference
items:
- uid: Gfycat.BookmarkFolder
  commentId: T:Gfycat.BookmarkFolder
  id: BookmarkFolder
  parent: Gfycat
  children:
  - Gfycat.BookmarkFolder.Content
  - Gfycat.BookmarkFolder.Count
  - Gfycat.BookmarkFolder.DeleteAsync(Gfycat.RequestOptions)
  - Gfycat.BookmarkFolder.Gfycat#IFolderContent#MoveGfysAsync(Gfycat.IFolderContent,IEnumerable{Gfycat.Gfy},Gfycat.RequestOptions)
  - Gfycat.BookmarkFolder.ModifyTitleAsync(System.String,Gfycat.RequestOptions)
  - Gfycat.BookmarkFolder.MoveGfysAsync(Gfycat.BookmarkFolder,IEnumerable{Gfycat.Gfy},Gfycat.RequestOptions)
  - Gfycat.BookmarkFolder.Title
  - Gfycat.BookmarkFolder.UpdateAsync(Gfycat.RequestOptions)
  langs:
  - csharp
  - vb
  name: BookmarkFolder
  nameWithType: BookmarkFolder
  fullName: Gfycat.BookmarkFolder
  type: Class
  source:
    id: BookmarkFolder
    path: ''
    startLine: 563
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nRepresents a bookmark folder including content\n"
  example: []
  syntax:
    content: 'public class BookmarkFolder : Entity, IFolderContent, IFolder, IUpdatable'
    content.vb: >-
      Public Class BookmarkFolder
          Inherits Entity
          Implements IFolderContent, IFolder, IUpdatable
  inheritance:
  - System.Object
  - Gfycat.Entity
  implements:
  - Gfycat.IFolderContent
  - Gfycat.IFolder
  - Gfycat.IUpdatable
  inheritedMembers:
  - Gfycat.Entity.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Gfycat.BookmarkFolder.Title
  commentId: P:Gfycat.BookmarkFolder.Title
  id: Title
  parent: Gfycat.BookmarkFolder
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: BookmarkFolder.Title
  fullName: Gfycat.BookmarkFolder.Title
  type: Property
  source:
    id: Title
    path: ''
    startLine: 585
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the title of this bookmark folder\n"
  example: []
  syntax:
    content: public string Title { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Title As String
  overload: Gfycat.BookmarkFolder.Title*
  implements:
  - Gfycat.IFolder.Title
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.BookmarkFolder.Count
  commentId: P:Gfycat.BookmarkFolder.Count
  id: Count
  parent: Gfycat.BookmarkFolder
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: BookmarkFolder.Count
  fullName: Gfycat.BookmarkFolder.Count
  type: Property
  source:
    id: Count
    path: ''
    startLine: 589
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the number of gfys in this bookmark folder\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Gfycat.BookmarkFolder.Count*
  implements:
  - Gfycat.IFolderContent.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.BookmarkFolder.Content
  commentId: P:Gfycat.BookmarkFolder.Content
  id: Content
  parent: Gfycat.BookmarkFolder
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: BookmarkFolder.Content
  fullName: Gfycat.BookmarkFolder.Content
  type: Property
  source:
    id: Content
    path: ''
    startLine: 593
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the content of this bookmark folder\n"
  example: []
  syntax:
    content: public IReadOnlyCollection<Gfy> Content { get; }
    parameters: []
    return:
      type: IReadOnlyCollection{Gfycat.Gfy}
    content.vb: Public ReadOnly Property Content As IReadOnlyCollection(Of Gfy)
  overload: Gfycat.BookmarkFolder.Content*
  implements:
  - Gfycat.IFolderContent.Content
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.BookmarkFolder.ModifyTitleAsync(System.String,Gfycat.RequestOptions)
  commentId: M:Gfycat.BookmarkFolder.ModifyTitleAsync(System.String,Gfycat.RequestOptions)
  id: ModifyTitleAsync(System.String,Gfycat.RequestOptions)
  parent: Gfycat.BookmarkFolder
  langs:
  - csharp
  - vb
  name: ModifyTitleAsync(String, RequestOptions)
  nameWithType: BookmarkFolder.ModifyTitleAsync(String, RequestOptions)
  fullName: Gfycat.BookmarkFolder.ModifyTitleAsync(System.String, Gfycat.RequestOptions)
  type: Method
  source:
    id: ModifyTitleAsync
    path: ''
    startLine: 600
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nModifies the title of this gfy to the new value\n"
  example: []
  syntax:
    content: public Task ModifyTitleAsync(string newTitle, RequestOptions options = null)
    parameters:
    - id: newTitle
      type: System.String
      description: ''
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Public Function ModifyTitleAsync(newTitle As String, options As RequestOptions = Nothing) As Task
  overload: Gfycat.BookmarkFolder.ModifyTitleAsync*
  implements:
  - Gfycat.IFolder.ModifyTitleAsync(System.String,Gfycat.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gfycat.BookmarkFolder.MoveGfysAsync(Gfycat.BookmarkFolder,IEnumerable{Gfycat.Gfy},Gfycat.RequestOptions)
  commentId: M:Gfycat.BookmarkFolder.MoveGfysAsync(Gfycat.BookmarkFolder,IEnumerable{Gfycat.Gfy},Gfycat.RequestOptions)
  id: MoveGfysAsync(Gfycat.BookmarkFolder,IEnumerable{Gfycat.Gfy},Gfycat.RequestOptions)
  parent: Gfycat.BookmarkFolder
  langs:
  - csharp
  - vb
  name: MoveGfysAsync(BookmarkFolder, IEnumerable<Gfy>, RequestOptions)
  nameWithType: BookmarkFolder.MoveGfysAsync(BookmarkFolder, IEnumerable<Gfy>, RequestOptions)
  fullName: Gfycat.BookmarkFolder.MoveGfysAsync(Gfycat.BookmarkFolder, IEnumerable<Gfycat.Gfy>, Gfycat.RequestOptions)
  type: Method
  source:
    id: MoveGfysAsync
    path: ''
    startLine: 612
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nMoves the specified gfys to another bookmark folder\n"
  example: []
  syntax:
    content: public Task MoveGfysAsync(BookmarkFolder folderToMoveTo, IEnumerable<Gfy> gfysToMove, RequestOptions options = null)
    parameters:
    - id: folderToMoveTo
      type: Gfycat.BookmarkFolder
      description: ''
    - id: gfysToMove
      type: IEnumerable{Gfycat.Gfy}
      description: ''
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Public Function MoveGfysAsync(folderToMoveTo As BookmarkFolder, gfysToMove As IEnumerable(Of Gfy), options As RequestOptions = Nothing) As Task
  overload: Gfycat.BookmarkFolder.MoveGfysAsync*
  nameWithType.vb: BookmarkFolder.MoveGfysAsync(BookmarkFolder, IEnumerable(Of Gfy), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Gfycat.BookmarkFolder.MoveGfysAsync(Gfycat.BookmarkFolder, IEnumerable(Of Gfycat.Gfy), Gfycat.RequestOptions)
  name.vb: MoveGfysAsync(BookmarkFolder, IEnumerable(Of Gfy), RequestOptions)
- uid: Gfycat.BookmarkFolder.DeleteAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.BookmarkFolder.DeleteAsync(Gfycat.RequestOptions)
  id: DeleteAsync(Gfycat.RequestOptions)
  parent: Gfycat.BookmarkFolder
  langs:
  - csharp
  - vb
  name: DeleteAsync(RequestOptions)
  nameWithType: BookmarkFolder.DeleteAsync(RequestOptions)
  fullName: Gfycat.BookmarkFolder.DeleteAsync(Gfycat.RequestOptions)
  type: Method
  source:
    id: DeleteAsync
    path: ''
    startLine: 623
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nDeletes this bookmark folder on Gfycat\n"
  example: []
  syntax:
    content: public Task DeleteAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Public Function DeleteAsync(options As RequestOptions = Nothing) As Task
  overload: Gfycat.BookmarkFolder.DeleteAsync*
  implements:
  - Gfycat.IFolder.DeleteAsync(Gfycat.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gfycat.BookmarkFolder.UpdateAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.BookmarkFolder.UpdateAsync(Gfycat.RequestOptions)
  id: UpdateAsync(Gfycat.RequestOptions)
  parent: Gfycat.BookmarkFolder
  langs:
  - csharp
  - vb
  name: UpdateAsync(RequestOptions)
  nameWithType: BookmarkFolder.UpdateAsync(RequestOptions)
  fullName: Gfycat.BookmarkFolder.UpdateAsync(Gfycat.RequestOptions)
  type: Method
  source:
    id: UpdateAsync
    path: ''
    startLine: 632
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nUpdates this bookmark folder using the latest info from the server\n"
  example: []
  syntax:
    content: public Task UpdateAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Public Function UpdateAsync(options As RequestOptions = Nothing) As Task
  overload: Gfycat.BookmarkFolder.UpdateAsync*
  implements:
  - Gfycat.IUpdatable.UpdateAsync(Gfycat.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gfycat.BookmarkFolder.Gfycat#IFolderContent#MoveGfysAsync(Gfycat.IFolderContent,IEnumerable{Gfycat.Gfy},Gfycat.RequestOptions)
  commentId: M:Gfycat.BookmarkFolder.Gfycat#IFolderContent#MoveGfysAsync(Gfycat.IFolderContent,IEnumerable{Gfycat.Gfy},Gfycat.RequestOptions)
  id: Gfycat#IFolderContent#MoveGfysAsync(Gfycat.IFolderContent,IEnumerable{Gfycat.Gfy},Gfycat.RequestOptions)
  isEii: true
  parent: Gfycat.BookmarkFolder
  langs:
  - csharp
  - vb
  name: IFolderContent.MoveGfysAsync(IFolderContent, IEnumerable<Gfy>, RequestOptions)
  nameWithType: BookmarkFolder.IFolderContent.MoveGfysAsync(IFolderContent, IEnumerable<Gfy>, RequestOptions)
  fullName: Gfycat.BookmarkFolder.Gfycat.IFolderContent.MoveGfysAsync(Gfycat.IFolderContent, IEnumerable<Gfycat.Gfy>, Gfycat.RequestOptions)
  type: Method
  source:
    id: Gfycat.IFolderContent.MoveGfysAsync
    path: ''
    startLine: 637
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  syntax:
    content: Task IFolderContent.MoveGfysAsync(IFolderContent folderToMoveTo, IEnumerable<Gfy> gfysToMove, RequestOptions options)
    parameters:
    - id: folderToMoveTo
      type: Gfycat.IFolderContent
    - id: gfysToMove
      type: IEnumerable{Gfycat.Gfy}
    - id: options
      type: Gfycat.RequestOptions
    return:
      type: Task
    content.vb: Function Gfycat.IFolderContent.MoveGfysAsync(folderToMoveTo As IFolderContent, gfysToMove As IEnumerable(Of Gfy), options As RequestOptions) As Task Implements IFolderContent.MoveGfysAsync
  overload: Gfycat.BookmarkFolder.Gfycat#IFolderContent#MoveGfysAsync*
  implements:
  - Gfycat.IFolderContent.MoveGfysAsync(Gfycat.IFolderContent,IEnumerable{Gfycat.Gfy},Gfycat.RequestOptions)
  nameWithType.vb: BookmarkFolder.Gfycat.IFolderContent.MoveGfysAsync(IFolderContent, IEnumerable(Of Gfy), RequestOptions)
  fullName.vb: Gfycat.BookmarkFolder.Gfycat.IFolderContent.MoveGfysAsync(Gfycat.IFolderContent, IEnumerable(Of Gfycat.Gfy), Gfycat.RequestOptions)
  name.vb: Gfycat.IFolderContent.MoveGfysAsync(IFolderContent, IEnumerable(Of Gfy), RequestOptions)
references:
- uid: Gfycat
  commentId: N:Gfycat
  isExternal: false
  name: Gfycat
  nameWithType: Gfycat
  fullName: Gfycat
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Gfycat.Entity
  commentId: T:Gfycat.Entity
  parent: Gfycat
  isExternal: false
  name: Entity
  nameWithType: Entity
  fullName: Gfycat.Entity
- uid: Gfycat.IFolderContent
  commentId: T:Gfycat.IFolderContent
  parent: Gfycat
  isExternal: false
  name: IFolderContent
  nameWithType: IFolderContent
  fullName: Gfycat.IFolderContent
- uid: Gfycat.IFolder
  commentId: T:Gfycat.IFolder
  parent: Gfycat
  isExternal: false
  name: IFolder
  nameWithType: IFolder
  fullName: Gfycat.IFolder
- uid: Gfycat.IUpdatable
  commentId: T:Gfycat.IUpdatable
  parent: Gfycat
  isExternal: false
  name: IUpdatable
  nameWithType: IUpdatable
  fullName: Gfycat.IUpdatable
- uid: Gfycat.Entity.Id
  commentId: P:Gfycat.Entity.Id
  parent: Gfycat.Entity
  isExternal: false
  name: Id
  nameWithType: Entity.Id
  fullName: Gfycat.Entity.Id
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Gfycat.BookmarkFolder.Title*
  commentId: Overload:Gfycat.BookmarkFolder.Title
  isExternal: false
  name: Title
  nameWithType: BookmarkFolder.Title
  fullName: Gfycat.BookmarkFolder.Title
- uid: Gfycat.IFolder.Title
  commentId: P:Gfycat.IFolder.Title
  parent: Gfycat.IFolder
  isExternal: false
  name: Title
  nameWithType: IFolder.Title
  fullName: Gfycat.IFolder.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Gfycat.BookmarkFolder.Count*
  commentId: Overload:Gfycat.BookmarkFolder.Count
  isExternal: false
  name: Count
  nameWithType: BookmarkFolder.Count
  fullName: Gfycat.BookmarkFolder.Count
- uid: Gfycat.IFolderContent.Count
  commentId: P:Gfycat.IFolderContent.Count
  parent: Gfycat.IFolderContent
  isExternal: false
  name: Count
  nameWithType: IFolderContent.Count
  fullName: Gfycat.IFolderContent.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Gfycat.BookmarkFolder.Content*
  commentId: Overload:Gfycat.BookmarkFolder.Content
  isExternal: false
  name: Content
  nameWithType: BookmarkFolder.Content
  fullName: Gfycat.BookmarkFolder.Content
- uid: Gfycat.IFolderContent.Content
  commentId: P:Gfycat.IFolderContent.Content
  parent: Gfycat.IFolderContent
  isExternal: false
  name: Content
  nameWithType: IFolderContent.Content
  fullName: Gfycat.IFolderContent.Content
- uid: IReadOnlyCollection{Gfycat.Gfy}
  commentId: '!:IReadOnlyCollection{Gfycat.Gfy}'
  definition: IReadOnlyCollection`1
  name: IReadOnlyCollection<Gfy>
  nameWithType: IReadOnlyCollection<Gfy>
  fullName: IReadOnlyCollection<Gfycat.Gfy>
  nameWithType.vb: IReadOnlyCollection(Of Gfy)
  fullName.vb: IReadOnlyCollection(Of Gfycat.Gfy)
  name.vb: IReadOnlyCollection(Of Gfy)
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Gfycat.Gfy
    name: Gfy
    nameWithType: Gfy
    fullName: Gfycat.Gfy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Gfycat.Gfy
    name: Gfy
    nameWithType: Gfy
    fullName: Gfycat.Gfy
  - name: )
    nameWithType: )
    fullName: )
- uid: IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<>
  nameWithType: IReadOnlyCollection<>
  fullName: IReadOnlyCollection<>
  nameWithType.vb: IReadOnlyCollection(Of )
  fullName.vb: IReadOnlyCollection(Of )
  name.vb: IReadOnlyCollection(Of )
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Gfycat.BookmarkFolder.ModifyTitleAsync*
  commentId: Overload:Gfycat.BookmarkFolder.ModifyTitleAsync
  isExternal: false
  name: ModifyTitleAsync
  nameWithType: BookmarkFolder.ModifyTitleAsync
  fullName: Gfycat.BookmarkFolder.ModifyTitleAsync
- uid: Gfycat.IFolder.ModifyTitleAsync(System.String,Gfycat.RequestOptions)
  commentId: M:Gfycat.IFolder.ModifyTitleAsync(System.String,Gfycat.RequestOptions)
  parent: Gfycat.IFolder
  isExternal: true
  name: ModifyTitleAsync(String, RequestOptions)
  nameWithType: IFolder.ModifyTitleAsync(String, RequestOptions)
  fullName: Gfycat.IFolder.ModifyTitleAsync(System.String, Gfycat.RequestOptions)
  spec.csharp:
  - uid: Gfycat.IFolder.ModifyTitleAsync(System.String,Gfycat.RequestOptions)
    name: ModifyTitleAsync
    nameWithType: IFolder.ModifyTitleAsync
    fullName: Gfycat.IFolder.ModifyTitleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gfycat.IFolder.ModifyTitleAsync(System.String,Gfycat.RequestOptions)
    name: ModifyTitleAsync
    nameWithType: IFolder.ModifyTitleAsync
    fullName: Gfycat.IFolder.ModifyTitleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Gfycat.RequestOptions
  commentId: T:Gfycat.RequestOptions
  parent: Gfycat
  isExternal: false
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Gfycat.RequestOptions
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Gfycat.BookmarkFolder.MoveGfysAsync*
  commentId: Overload:Gfycat.BookmarkFolder.MoveGfysAsync
  isExternal: false
  name: MoveGfysAsync
  nameWithType: BookmarkFolder.MoveGfysAsync
  fullName: Gfycat.BookmarkFolder.MoveGfysAsync
- uid: Gfycat.BookmarkFolder
  commentId: T:Gfycat.BookmarkFolder
  parent: Gfycat
  isExternal: false
  name: BookmarkFolder
  nameWithType: BookmarkFolder
  fullName: Gfycat.BookmarkFolder
- uid: IEnumerable{Gfycat.Gfy}
  commentId: '!:IEnumerable{Gfycat.Gfy}'
  definition: IEnumerable`1
  name: IEnumerable<Gfy>
  nameWithType: IEnumerable<Gfy>
  fullName: IEnumerable<Gfycat.Gfy>
  nameWithType.vb: IEnumerable(Of Gfy)
  fullName.vb: IEnumerable(Of Gfycat.Gfy)
  name.vb: IEnumerable(Of Gfy)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Gfycat.Gfy
    name: Gfy
    nameWithType: Gfy
    fullName: Gfycat.Gfy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Gfycat.Gfy
    name: Gfy
    nameWithType: Gfy
    fullName: Gfycat.Gfy
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Gfycat.BookmarkFolder.DeleteAsync*
  commentId: Overload:Gfycat.BookmarkFolder.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: BookmarkFolder.DeleteAsync
  fullName: Gfycat.BookmarkFolder.DeleteAsync
- uid: Gfycat.IFolder.DeleteAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.IFolder.DeleteAsync(Gfycat.RequestOptions)
  parent: Gfycat.IFolder
  isExternal: false
  name: DeleteAsync(RequestOptions)
  nameWithType: IFolder.DeleteAsync(RequestOptions)
  fullName: Gfycat.IFolder.DeleteAsync(Gfycat.RequestOptions)
  spec.csharp:
  - uid: Gfycat.IFolder.DeleteAsync(Gfycat.RequestOptions)
    name: DeleteAsync
    nameWithType: IFolder.DeleteAsync
    fullName: Gfycat.IFolder.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gfycat.IFolder.DeleteAsync(Gfycat.RequestOptions)
    name: DeleteAsync
    nameWithType: IFolder.DeleteAsync
    fullName: Gfycat.IFolder.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Gfycat.BookmarkFolder.UpdateAsync*
  commentId: Overload:Gfycat.BookmarkFolder.UpdateAsync
  isExternal: false
  name: UpdateAsync
  nameWithType: BookmarkFolder.UpdateAsync
  fullName: Gfycat.BookmarkFolder.UpdateAsync
- uid: Gfycat.IUpdatable.UpdateAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.IUpdatable.UpdateAsync(Gfycat.RequestOptions)
  parent: Gfycat.IUpdatable
  isExternal: false
  name: UpdateAsync(RequestOptions)
  nameWithType: IUpdatable.UpdateAsync(RequestOptions)
  fullName: Gfycat.IUpdatable.UpdateAsync(Gfycat.RequestOptions)
  spec.csharp:
  - uid: Gfycat.IUpdatable.UpdateAsync(Gfycat.RequestOptions)
    name: UpdateAsync
    nameWithType: IUpdatable.UpdateAsync
    fullName: Gfycat.IUpdatable.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gfycat.IUpdatable.UpdateAsync(Gfycat.RequestOptions)
    name: UpdateAsync
    nameWithType: IUpdatable.UpdateAsync
    fullName: Gfycat.IUpdatable.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Gfycat.BookmarkFolder.Gfycat#IFolderContent#MoveGfysAsync*
  commentId: Overload:Gfycat.BookmarkFolder.Gfycat#IFolderContent#MoveGfysAsync
  isExternal: false
  name: IFolderContent.MoveGfysAsync
  nameWithType: BookmarkFolder.IFolderContent.MoveGfysAsync
  fullName: Gfycat.BookmarkFolder.Gfycat.IFolderContent.MoveGfysAsync
  nameWithType.vb: BookmarkFolder.Gfycat.IFolderContent.MoveGfysAsync
  name.vb: Gfycat.IFolderContent.MoveGfysAsync
- uid: Gfycat.IFolderContent.MoveGfysAsync(Gfycat.IFolderContent,IEnumerable{Gfycat.Gfy},Gfycat.RequestOptions)
  commentId: M:Gfycat.IFolderContent.MoveGfysAsync(Gfycat.IFolderContent,IEnumerable{Gfycat.Gfy},Gfycat.RequestOptions)
  parent: Gfycat.IFolderContent
  isExternal: true
  name: MoveGfysAsync(IFolderContent, IEnumerable<Gfy>, RequestOptions)
  nameWithType: IFolderContent.MoveGfysAsync(IFolderContent, IEnumerable<Gfy>, RequestOptions)
  fullName: Gfycat.IFolderContent.MoveGfysAsync(Gfycat.IFolderContent, IEnumerable<Gfycat.Gfy>, Gfycat.RequestOptions)
  nameWithType.vb: IFolderContent.MoveGfysAsync(IFolderContent, IEnumerable(Of Gfy), RequestOptions)
  fullName.vb: Gfycat.IFolderContent.MoveGfysAsync(Gfycat.IFolderContent, IEnumerable(Of Gfycat.Gfy), Gfycat.RequestOptions)
  name.vb: MoveGfysAsync(IFolderContent, IEnumerable(Of Gfy), RequestOptions)
  spec.csharp:
  - uid: Gfycat.IFolderContent.MoveGfysAsync(Gfycat.IFolderContent,IEnumerable{Gfycat.Gfy},Gfycat.RequestOptions)
    name: MoveGfysAsync
    nameWithType: IFolderContent.MoveGfysAsync
    fullName: Gfycat.IFolderContent.MoveGfysAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.IFolderContent
    name: IFolderContent
    nameWithType: IFolderContent
    fullName: Gfycat.IFolderContent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Gfycat.Gfy
    name: Gfy
    nameWithType: Gfy
    fullName: Gfycat.Gfy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gfycat.IFolderContent.MoveGfysAsync(Gfycat.IFolderContent,IEnumerable{Gfycat.Gfy},Gfycat.RequestOptions)
    name: MoveGfysAsync
    nameWithType: IFolderContent.MoveGfysAsync
    fullName: Gfycat.IFolderContent.MoveGfysAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.IFolderContent
    name: IFolderContent
    nameWithType: IFolderContent
    fullName: Gfycat.IFolderContent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Gfycat.Gfy
    name: Gfy
    nameWithType: Gfy
    fullName: Gfycat.Gfy
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
