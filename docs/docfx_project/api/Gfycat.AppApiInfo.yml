### YamlMime:ManagedReference
items:
- uid: Gfycat.AppApiInfo
  commentId: T:Gfycat.AppApiInfo
  id: AppApiInfo
  parent: Gfycat
  children:
  - Gfycat.AppApiInfo.AppName
  - Gfycat.AppApiInfo.AppType
  - Gfycat.AppApiInfo.Company
  - Gfycat.AppApiInfo.ContactName
  - Gfycat.AppApiInfo.CreationDate
  - Gfycat.AppApiInfo.Email
  - Gfycat.AppApiInfo.RedirectUris
  - Gfycat.AppApiInfo.Username
  - Gfycat.AppApiInfo.WebUrl
  langs:
  - csharp
  - vb
  name: AppApiInfo
  nameWithType: AppApiInfo
  fullName: Gfycat.AppApiInfo
  type: Class
  source:
    id: AppApiInfo
    path: ''
    startLine: 484
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nRepresents an developer key's app information\n"
  example: []
  syntax:
    content: 'public class AppApiInfo : Entity'
    content.vb: >-
      Public Class AppApiInfo
          Inherits Entity
  inheritance:
  - System.Object
  - Gfycat.Entity
  inheritedMembers:
  - Gfycat.Entity.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Gfycat.AppApiInfo.ContactName
  commentId: P:Gfycat.AppApiInfo.ContactName
  id: ContactName
  parent: Gfycat.AppApiInfo
  langs:
  - csharp
  - vb
  name: ContactName
  nameWithType: AppApiInfo.ContactName
  fullName: Gfycat.AppApiInfo.ContactName
  type: Property
  source:
    id: ContactName
    path: ''
    startLine: 492
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the contact name for this app\n"
  example: []
  syntax:
    content: public string ContactName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ContactName As String
  overload: Gfycat.AppApiInfo.ContactName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.AppApiInfo.WebUrl
  commentId: P:Gfycat.AppApiInfo.WebUrl
  id: WebUrl
  parent: Gfycat.AppApiInfo
  langs:
  - csharp
  - vb
  name: WebUrl
  nameWithType: AppApiInfo.WebUrl
  fullName: Gfycat.AppApiInfo.WebUrl
  type: Property
  source:
    id: WebUrl
    path: ''
    startLine: 496
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets a url for this app\n"
  example: []
  syntax:
    content: public string WebUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property WebUrl As String
  overload: Gfycat.AppApiInfo.WebUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.AppApiInfo.Company
  commentId: P:Gfycat.AppApiInfo.Company
  id: Company
  parent: Gfycat.AppApiInfo
  langs:
  - csharp
  - vb
  name: Company
  nameWithType: AppApiInfo.Company
  fullName: Gfycat.AppApiInfo.Company
  type: Property
  source:
    id: Company
    path: ''
    startLine: 500
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the company of this app\n"
  example: []
  syntax:
    content: public string Company { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Company As String
  overload: Gfycat.AppApiInfo.Company*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.AppApiInfo.CreationDate
  commentId: P:Gfycat.AppApiInfo.CreationDate
  id: CreationDate
  parent: Gfycat.AppApiInfo
  langs:
  - csharp
  - vb
  name: CreationDate
  nameWithType: AppApiInfo.CreationDate
  fullName: Gfycat.AppApiInfo.CreationDate
  type: Property
  source:
    id: CreationDate
    path: ''
    startLine: 504
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the creation date of this app\n"
  example: []
  syntax:
    content: public DateTime CreationDate { get; }
    parameters: []
    return:
      type: DateTime
    content.vb: Public ReadOnly Property CreationDate As DateTime
  overload: Gfycat.AppApiInfo.CreationDate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.AppApiInfo.AppName
  commentId: P:Gfycat.AppApiInfo.AppName
  id: AppName
  parent: Gfycat.AppApiInfo
  langs:
  - csharp
  - vb
  name: AppName
  nameWithType: AppApiInfo.AppName
  fullName: Gfycat.AppApiInfo.AppName
  type: Property
  source:
    id: AppName
    path: ''
    startLine: 508
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the name of this app\n"
  example: []
  syntax:
    content: public string AppName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AppName As String
  overload: Gfycat.AppApiInfo.AppName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.AppApiInfo.RedirectUris
  commentId: P:Gfycat.AppApiInfo.RedirectUris
  id: RedirectUris
  parent: Gfycat.AppApiInfo
  langs:
  - csharp
  - vb
  name: RedirectUris
  nameWithType: AppApiInfo.RedirectUris
  fullName: Gfycat.AppApiInfo.RedirectUris
  type: Property
  source:
    id: RedirectUris
    path: ''
    startLine: 512
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the redirect uris of this app\n"
  example: []
  syntax:
    content: public IReadOnlyCollection<string> RedirectUris { get; }
    parameters: []
    return:
      type: IReadOnlyCollection{System.String}
    content.vb: Public ReadOnly Property RedirectUris As IReadOnlyCollection(Of String)
  overload: Gfycat.AppApiInfo.RedirectUris*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.AppApiInfo.AppType
  commentId: P:Gfycat.AppApiInfo.AppType
  id: AppType
  parent: Gfycat.AppApiInfo
  langs:
  - csharp
  - vb
  name: AppType
  nameWithType: AppApiInfo.AppType
  fullName: Gfycat.AppApiInfo.AppType
  type: Property
  source:
    id: AppType
    path: ''
    startLine: 516
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the type of this app\n"
  example: []
  syntax:
    content: public AppType AppType { get; }
    parameters: []
    return:
      type: Gfycat.AppType
    content.vb: Public ReadOnly Property AppType As AppType
  overload: Gfycat.AppApiInfo.AppType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.AppApiInfo.Username
  commentId: P:Gfycat.AppApiInfo.Username
  id: Username
  parent: Gfycat.AppApiInfo
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: AppApiInfo.Username
  fullName: Gfycat.AppApiInfo.Username
  type: Property
  source:
    id: Username
    path: ''
    startLine: 520
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the username of the account which owns this app\n"
  example: []
  syntax:
    content: public string Username { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Username As String
  overload: Gfycat.AppApiInfo.Username*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.AppApiInfo.Email
  commentId: P:Gfycat.AppApiInfo.Email
  id: Email
  parent: Gfycat.AppApiInfo
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: AppApiInfo.Email
  fullName: Gfycat.AppApiInfo.Email
  type: Property
  source:
    id: Email
    path: ''
    startLine: 524
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the email of the account which owns this app\n"
  example: []
  syntax:
    content: public string Email { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Email As String
  overload: Gfycat.AppApiInfo.Email*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Gfycat
  commentId: N:Gfycat
  isExternal: false
  name: Gfycat
  nameWithType: Gfycat
  fullName: Gfycat
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Gfycat.Entity
  commentId: T:Gfycat.Entity
  parent: Gfycat
  isExternal: false
  name: Entity
  nameWithType: Entity
  fullName: Gfycat.Entity
- uid: Gfycat.Entity.Id
  commentId: P:Gfycat.Entity.Id
  parent: Gfycat.Entity
  isExternal: false
  name: Id
  nameWithType: Entity.Id
  fullName: Gfycat.Entity.Id
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Gfycat.AppApiInfo.ContactName*
  commentId: Overload:Gfycat.AppApiInfo.ContactName
  isExternal: false
  name: ContactName
  nameWithType: AppApiInfo.ContactName
  fullName: Gfycat.AppApiInfo.ContactName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Gfycat.AppApiInfo.WebUrl*
  commentId: Overload:Gfycat.AppApiInfo.WebUrl
  isExternal: false
  name: WebUrl
  nameWithType: AppApiInfo.WebUrl
  fullName: Gfycat.AppApiInfo.WebUrl
- uid: Gfycat.AppApiInfo.Company*
  commentId: Overload:Gfycat.AppApiInfo.Company
  isExternal: false
  name: Company
  nameWithType: AppApiInfo.Company
  fullName: Gfycat.AppApiInfo.Company
- uid: Gfycat.AppApiInfo.CreationDate*
  commentId: Overload:Gfycat.AppApiInfo.CreationDate
  isExternal: false
  name: CreationDate
  nameWithType: AppApiInfo.CreationDate
  fullName: Gfycat.AppApiInfo.CreationDate
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: Gfycat.AppApiInfo.AppName*
  commentId: Overload:Gfycat.AppApiInfo.AppName
  isExternal: false
  name: AppName
  nameWithType: AppApiInfo.AppName
  fullName: Gfycat.AppApiInfo.AppName
- uid: Gfycat.AppApiInfo.RedirectUris*
  commentId: Overload:Gfycat.AppApiInfo.RedirectUris
  isExternal: false
  name: RedirectUris
  nameWithType: AppApiInfo.RedirectUris
  fullName: Gfycat.AppApiInfo.RedirectUris
- uid: IReadOnlyCollection{System.String}
  commentId: '!:IReadOnlyCollection{System.String}'
  definition: IReadOnlyCollection`1
  name: IReadOnlyCollection<String>
  nameWithType: IReadOnlyCollection<String>
  fullName: IReadOnlyCollection<System.String>
  nameWithType.vb: IReadOnlyCollection(Of String)
  fullName.vb: IReadOnlyCollection(Of System.String)
  name.vb: IReadOnlyCollection(Of String)
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<>
  nameWithType: IReadOnlyCollection<>
  fullName: IReadOnlyCollection<>
  nameWithType.vb: IReadOnlyCollection(Of )
  fullName.vb: IReadOnlyCollection(Of )
  name.vb: IReadOnlyCollection(Of )
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Gfycat.AppApiInfo.AppType*
  commentId: Overload:Gfycat.AppApiInfo.AppType
  isExternal: false
  name: AppType
  nameWithType: AppApiInfo.AppType
  fullName: Gfycat.AppApiInfo.AppType
- uid: Gfycat.AppType
  commentId: T:Gfycat.AppType
  parent: Gfycat
  isExternal: false
  name: AppType
  nameWithType: AppType
  fullName: Gfycat.AppType
- uid: Gfycat.AppApiInfo.Username*
  commentId: Overload:Gfycat.AppApiInfo.Username
  isExternal: false
  name: Username
  nameWithType: AppApiInfo.Username
  fullName: Gfycat.AppApiInfo.Username
- uid: Gfycat.AppApiInfo.Email*
  commentId: Overload:Gfycat.AppApiInfo.Email
  isExternal: false
  name: Email
  nameWithType: AppApiInfo.Email
  fullName: Gfycat.AppApiInfo.Email
