### YamlMime:ManagedReference
items:
- uid: Gfycat.Crop
  commentId: T:Gfycat.Crop
  id: Crop
  parent: Gfycat
  children:
  - Gfycat.Crop.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - Gfycat.Crop.Height
  - Gfycat.Crop.Width
  - Gfycat.Crop.XPosition
  - Gfycat.Crop.YPosition
  langs:
  - csharp
  - vb
  name: Crop
  nameWithType: Crop
  fullName: Gfycat.Crop
  type: Class
  source:
    id: Crop
    path: ''
    startLine: 3184
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nRepresents an image crop for a gfy\n"
  example: []
  syntax:
    content: public class Crop
    content.vb: Public Class Crop
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Gfycat.Crop.XPosition
  commentId: P:Gfycat.Crop.XPosition
  id: XPosition
  parent: Gfycat.Crop
  langs:
  - csharp
  - vb
  name: XPosition
  nameWithType: Crop.XPosition
  fullName: Gfycat.Crop.XPosition
  type: Property
  source:
    id: XPosition
    path: ''
    startLine: 3189
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nSets the X position for this crop\n"
  example: []
  syntax:
    content: public int XPosition { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property XPosition As Integer
  overload: Gfycat.Crop.XPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Gfycat.Crop.YPosition
  commentId: P:Gfycat.Crop.YPosition
  id: YPosition
  parent: Gfycat.Crop
  langs:
  - csharp
  - vb
  name: YPosition
  nameWithType: Crop.YPosition
  fullName: Gfycat.Crop.YPosition
  type: Property
  source:
    id: YPosition
    path: ''
    startLine: 3193
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nSets the Y position for this crop\n"
  example: []
  syntax:
    content: public int YPosition { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property YPosition As Integer
  overload: Gfycat.Crop.YPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Gfycat.Crop.Width
  commentId: P:Gfycat.Crop.Width
  id: Width
  parent: Gfycat.Crop
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Crop.Width
  fullName: Gfycat.Crop.Width
  type: Property
  source:
    id: Width
    path: ''
    startLine: 3197
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nSets the width of this crop\n"
  example: []
  syntax:
    content: public int Width { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Width As Integer
  overload: Gfycat.Crop.Width*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Gfycat.Crop.Height
  commentId: P:Gfycat.Crop.Height
  id: Height
  parent: Gfycat.Crop
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Crop.Height
  fullName: Gfycat.Crop.Height
  type: Property
  source:
    id: Height
    path: ''
    startLine: 3201
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nSets the height of this crop\n"
  example: []
  syntax:
    content: public int Height { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Height As Integer
  overload: Gfycat.Crop.Height*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Gfycat.Crop.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Gfycat.Crop.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: Gfycat.Crop
  langs:
  - csharp
  - vb
  name: Crop(Int32, Int32, Int32, Int32)
  nameWithType: Crop.Crop(Int32, Int32, Int32, Int32)
  fullName: Gfycat.Crop.Crop(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3210
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nCreates a new crop using the specified X position, Y position, width, and height\n"
  example: []
  syntax:
    content: public Crop(int xpos, int ypos, int width, int height)
    parameters:
    - id: xpos
      type: System.Int32
      description: ''
    - id: ypos
      type: System.Int32
      description: ''
    - id: width
      type: System.Int32
      description: ''
    - id: height
      type: System.Int32
      description: ''
    content.vb: Public Sub New(xpos As Integer, ypos As Integer, width As Integer, height As Integer)
  overload: Gfycat.Crop.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Gfycat
  commentId: N:Gfycat
  isExternal: false
  name: Gfycat
  nameWithType: Gfycat
  fullName: Gfycat
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Gfycat.Crop.XPosition*
  commentId: Overload:Gfycat.Crop.XPosition
  isExternal: false
  name: XPosition
  nameWithType: Crop.XPosition
  fullName: Gfycat.Crop.XPosition
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Gfycat.Crop.YPosition*
  commentId: Overload:Gfycat.Crop.YPosition
  isExternal: false
  name: YPosition
  nameWithType: Crop.YPosition
  fullName: Gfycat.Crop.YPosition
- uid: Gfycat.Crop.Width*
  commentId: Overload:Gfycat.Crop.Width
  isExternal: false
  name: Width
  nameWithType: Crop.Width
  fullName: Gfycat.Crop.Width
- uid: Gfycat.Crop.Height*
  commentId: Overload:Gfycat.Crop.Height
  isExternal: false
  name: Height
  nameWithType: Crop.Height
  fullName: Gfycat.Crop.Height
- uid: Gfycat.Crop.#ctor*
  commentId: Overload:Gfycat.Crop.#ctor
  isExternal: false
  name: Crop
  nameWithType: Crop.Crop
  fullName: Gfycat.Crop.Crop
