### YamlMime:ManagedReference
items:
- uid: Gfycat.ISearchable
  commentId: T:Gfycat.ISearchable
  id: ISearchable
  parent: Gfycat
  children:
  - Gfycat.ISearchable.SearchAsync(System.String,Gfycat.RequestOptions)
  langs:
  - csharp
  - vb
  name: ISearchable
  nameWithType: ISearchable
  fullName: Gfycat.ISearchable
  type: Interface
  source:
    id: ISearchable
    path: ''
    startLine: 3560
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nExposes a search method for searching the gfycat website or the current user\n"
  example: []
  syntax:
    content: public interface ISearchable
    content.vb: Public Interface ISearchable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Gfycat.ISearchable.SearchAsync(System.String,Gfycat.RequestOptions)
  commentId: M:Gfycat.ISearchable.SearchAsync(System.String,Gfycat.RequestOptions)
  id: SearchAsync(System.String,Gfycat.RequestOptions)
  parent: Gfycat.ISearchable
  langs:
  - csharp
  - vb
  name: SearchAsync(String, RequestOptions)
  nameWithType: ISearchable.SearchAsync(String, RequestOptions)
  fullName: Gfycat.ISearchable.SearchAsync(System.String, Gfycat.RequestOptions)
  type: Method
  source:
    id: SearchAsync
    path: ''
    startLine: 3568
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nSearches this type\n"
  example: []
  syntax:
    content: Task<GfyFeed> SearchAsync(string searchText, RequestOptions options = null)
    parameters:
    - id: searchText
      type: System.String
      description: ''
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task{Gfycat.GfyFeed}
      description: ''
    content.vb: Function SearchAsync(searchText As String, options As RequestOptions = Nothing) As Task(Of GfyFeed)
  overload: Gfycat.ISearchable.SearchAsync*
references:
- uid: Gfycat
  commentId: N:Gfycat
  isExternal: false
  name: Gfycat
  nameWithType: Gfycat
  fullName: Gfycat
- uid: Gfycat.ISearchable.SearchAsync*
  commentId: Overload:Gfycat.ISearchable.SearchAsync
  isExternal: false
  name: SearchAsync
  nameWithType: ISearchable.SearchAsync
  fullName: Gfycat.ISearchable.SearchAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Gfycat.RequestOptions
  commentId: T:Gfycat.RequestOptions
  parent: Gfycat
  isExternal: false
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Gfycat.RequestOptions
- uid: Task{Gfycat.GfyFeed}
  commentId: '!:Task{Gfycat.GfyFeed}'
  definition: Task`1
  name: Task<GfyFeed>
  nameWithType: Task<GfyFeed>
  fullName: Task<Gfycat.GfyFeed>
  nameWithType.vb: Task(Of GfyFeed)
  fullName.vb: Task(Of Gfycat.GfyFeed)
  name.vb: Task(Of GfyFeed)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Gfycat.GfyFeed
    name: GfyFeed
    nameWithType: GfyFeed
    fullName: Gfycat.GfyFeed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Gfycat.GfyFeed
    name: GfyFeed
    nameWithType: GfyFeed
    fullName: Gfycat.GfyFeed
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
