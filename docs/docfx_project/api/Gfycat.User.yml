### YamlMime:ManagedReference
items:
- uid: Gfycat.User
  commentId: T:Gfycat.User
  id: User
  parent: Gfycat
  children:
  - Gfycat.User.CreationDate
  - Gfycat.User.Description
  - Gfycat.User.FollowAsync(Gfycat.RequestOptions)
  - Gfycat.User.Followers
  - Gfycat.User.Following
  - Gfycat.User.GetAlbumsAsync(Gfycat.RequestOptions)
  - Gfycat.User.GetFollowingUser(Gfycat.RequestOptions)
  - Gfycat.User.GetGfyFeedAsync(Gfycat.RequestOptions)
  - Gfycat.User.Gfycat#IUser#GetAlbumsAsync(Gfycat.RequestOptions)
  - Gfycat.User.IframeProfileImageVisible
  - Gfycat.User.Name
  - Gfycat.User.ProfileImageUrl
  - Gfycat.User.ProfileUrl
  - Gfycat.User.PublishedAlbums
  - Gfycat.User.PublishedGfys
  - Gfycat.User.UnfollowAsync(Gfycat.RequestOptions)
  - Gfycat.User.UpdateAsync(Gfycat.RequestOptions)
  - Gfycat.User.Url
  - Gfycat.User.Username
  - Gfycat.User.Verified
  - Gfycat.User.Views
  langs:
  - csharp
  - vb
  name: User
  nameWithType: User
  fullName: Gfycat.User
  type: Class
  source:
    id: User
    path: ''
    startLine: 4092
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nRepresents a user on Gfycat\n"
  example: []
  syntax:
    content: 'public class User : Entity, IUser, IUpdatable'
    content.vb: >-
      Public Class User
          Inherits Entity
          Implements IUser, IUpdatable
  inheritance:
  - System.Object
  - Gfycat.Entity
  implements:
  - Gfycat.IUser
  - Gfycat.IUpdatable
  inheritedMembers:
  - Gfycat.Entity.Id
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Gfycat.User.Username
  commentId: P:Gfycat.User.Username
  id: Username
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: User.Username
  fullName: Gfycat.User.Username
  type: Property
  source:
    id: Username
    path: ''
    startLine: 4098
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nThe username of this user\n"
  example: []
  syntax:
    content: public string Username { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Username As String
  overload: Gfycat.User.Username*
  implements:
  - Gfycat.IUser.Username
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.User.Description
  commentId: P:Gfycat.User.Description
  id: Description
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: User.Description
  fullName: Gfycat.User.Description
  type: Property
  source:
    id: Description
    path: ''
    startLine: 4102
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nThe description of this user\n"
  example: []
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Description As String
  overload: Gfycat.User.Description*
  implements:
  - Gfycat.IUser.Description
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.User.ProfileUrl
  commentId: P:Gfycat.User.ProfileUrl
  id: ProfileUrl
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: ProfileUrl
  nameWithType: User.ProfileUrl
  fullName: Gfycat.User.ProfileUrl
  type: Property
  source:
    id: ProfileUrl
    path: ''
    startLine: 4106
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the URL provided on the user's profile\n"
  example: []
  syntax:
    content: public string ProfileUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProfileUrl As String
  overload: Gfycat.User.ProfileUrl*
  implements:
  - Gfycat.IUser.ProfileUrl
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.User.Name
  commentId: P:Gfycat.User.Name
  id: Name
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: User.Name
  fullName: Gfycat.User.Name
  type: Property
  source:
    id: Name
    path: ''
    startLine: 4110
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets this user's name provided on their profile\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Gfycat.User.Name*
  implements:
  - Gfycat.IUser.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.User.Views
  commentId: P:Gfycat.User.Views
  id: Views
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: Views
  nameWithType: User.Views
  fullName: Gfycat.User.Views
  type: Property
  source:
    id: Views
    path: ''
    startLine: 4114
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the total number of Gfy views this user has recieved\n"
  example: []
  syntax:
    content: public int Views { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Views As Integer
  overload: Gfycat.User.Views*
  implements:
  - Gfycat.IUser.Views
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.User.Url
  commentId: P:Gfycat.User.Url
  id: Url
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: User.Url
  fullName: Gfycat.User.Url
  type: Property
  source:
    id: Url
    path: ''
    startLine: 4118
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets a browser friendly URL to this user's profile\n"
  example: []
  syntax:
    content: public string Url { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Url As String
  overload: Gfycat.User.Url*
  implements:
  - Gfycat.IUser.Url
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.User.CreationDate
  commentId: P:Gfycat.User.CreationDate
  id: CreationDate
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: CreationDate
  nameWithType: User.CreationDate
  fullName: Gfycat.User.CreationDate
  type: Property
  source:
    id: CreationDate
    path: ''
    startLine: 4122
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the date and time of this user's account creation\n"
  example: []
  syntax:
    content: public DateTime CreationDate { get; }
    parameters: []
    return:
      type: DateTime
    content.vb: Public ReadOnly Property CreationDate As DateTime
  overload: Gfycat.User.CreationDate*
  implements:
  - Gfycat.IUser.CreationDate
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.User.ProfileImageUrl
  commentId: P:Gfycat.User.ProfileImageUrl
  id: ProfileImageUrl
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: ProfileImageUrl
  nameWithType: User.ProfileImageUrl
  fullName: Gfycat.User.ProfileImageUrl
  type: Property
  source:
    id: ProfileImageUrl
    path: ''
    startLine: 4126
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets this user's profile image url\n"
  example: []
  syntax:
    content: public string ProfileImageUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProfileImageUrl As String
  overload: Gfycat.User.ProfileImageUrl*
  implements:
  - Gfycat.IUser.ProfileImageUrl
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.User.Verified
  commentId: P:Gfycat.User.Verified
  id: Verified
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: Verified
  nameWithType: User.Verified
  fullName: Gfycat.User.Verified
  type: Property
  source:
    id: Verified
    path: ''
    startLine: 4130
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets whether this user is verified\n"
  example: []
  syntax:
    content: public bool Verified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Verified As Boolean
  overload: Gfycat.User.Verified*
  implements:
  - Gfycat.IUser.Verified
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.User.Followers
  commentId: P:Gfycat.User.Followers
  id: Followers
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: Followers
  nameWithType: User.Followers
  fullName: Gfycat.User.Followers
  type: Property
  source:
    id: Followers
    path: ''
    startLine: 4134
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the number of users following this user\n"
  example: []
  syntax:
    content: public int Followers { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Followers As Integer
  overload: Gfycat.User.Followers*
  implements:
  - Gfycat.IUser.Followers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.User.Following
  commentId: P:Gfycat.User.Following
  id: Following
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: Following
  nameWithType: User.Following
  fullName: Gfycat.User.Following
  type: Property
  source:
    id: Following
    path: ''
    startLine: 4138
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the number of users this user is following\n"
  example: []
  syntax:
    content: public int Following { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Following As Integer
  overload: Gfycat.User.Following*
  implements:
  - Gfycat.IUser.Following
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.User.IframeProfileImageVisible
  commentId: P:Gfycat.User.IframeProfileImageVisible
  id: IframeProfileImageVisible
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: IframeProfileImageVisible
  nameWithType: User.IframeProfileImageVisible
  fullName: Gfycat.User.IframeProfileImageVisible
  type: Property
  source:
    id: IframeProfileImageVisible
    path: ''
    startLine: 4142
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the user’s profile image visibility on the iframe\n"
  example: []
  syntax:
    content: public bool IframeProfileImageVisible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IframeProfileImageVisible As Boolean
  overload: Gfycat.User.IframeProfileImageVisible*
  implements:
  - Gfycat.IUser.IframeProfileImageVisible
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.User.PublishedGfys
  commentId: P:Gfycat.User.PublishedGfys
  id: PublishedGfys
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: PublishedGfys
  nameWithType: User.PublishedGfys
  fullName: Gfycat.User.PublishedGfys
  type: Property
  source:
    id: PublishedGfys
    path: ''
    startLine: 4146
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the number of Gfys this user has published on their account\n"
  example: []
  syntax:
    content: public int PublishedGfys { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PublishedGfys As Integer
  overload: Gfycat.User.PublishedGfys*
  implements:
  - Gfycat.IUser.PublishedGfys
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.User.PublishedAlbums
  commentId: P:Gfycat.User.PublishedAlbums
  id: PublishedAlbums
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: PublishedAlbums
  nameWithType: User.PublishedAlbums
  fullName: Gfycat.User.PublishedAlbums
  type: Property
  source:
    id: PublishedAlbums
    path: ''
    startLine: 4150
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets the number of albums this user had published on their account\n"
  example: []
  syntax:
    content: public int PublishedAlbums { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PublishedAlbums As Integer
  overload: Gfycat.User.PublishedAlbums*
  implements:
  - Gfycat.IUser.PublishedAlbums
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Gfycat.User.UpdateAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.User.UpdateAsync(Gfycat.RequestOptions)
  id: UpdateAsync(Gfycat.RequestOptions)
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: UpdateAsync(RequestOptions)
  nameWithType: User.UpdateAsync(RequestOptions)
  fullName: Gfycat.User.UpdateAsync(Gfycat.RequestOptions)
  type: Method
  source:
    id: UpdateAsync
    path: ''
    startLine: 4184
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nUpdates this object with the latest server information\n"
  example: []
  syntax:
    content: public Task UpdateAsync(RequestOptions options)
    parameters:
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Public Function UpdateAsync(options As RequestOptions) As Task
  overload: Gfycat.User.UpdateAsync*
  implements:
  - Gfycat.IUpdatable.UpdateAsync(Gfycat.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gfycat.User.GetAlbumsAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.User.GetAlbumsAsync(Gfycat.RequestOptions)
  id: GetAlbumsAsync(Gfycat.RequestOptions)
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: GetAlbumsAsync(RequestOptions)
  nameWithType: User.GetAlbumsAsync(RequestOptions)
  fullName: Gfycat.User.GetAlbumsAsync(Gfycat.RequestOptions)
  type: Method
  source:
    id: GetAlbumsAsync
    path: ''
    startLine: 4193
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nReturns all public albums for this user\n"
  example: []
  syntax:
    content: public Task<IEnumerable<AlbumInfo>> GetAlbumsAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task{IEnumerable{Gfycat.AlbumInfo}}
      description: ''
    content.vb: Public Function GetAlbumsAsync(options As RequestOptions = Nothing) As Task(Of IEnumerable(Of AlbumInfo))
  overload: Gfycat.User.GetAlbumsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gfycat.User.Gfycat#IUser#GetAlbumsAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.User.Gfycat#IUser#GetAlbumsAsync(Gfycat.RequestOptions)
  id: Gfycat#IUser#GetAlbumsAsync(Gfycat.RequestOptions)
  isEii: true
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: IUser.GetAlbumsAsync(RequestOptions)
  nameWithType: User.IUser.GetAlbumsAsync(RequestOptions)
  fullName: Gfycat.User.Gfycat.IUser.GetAlbumsAsync(Gfycat.RequestOptions)
  type: Method
  source:
    id: Gfycat.IUser.GetAlbumsAsync
    path: ''
    startLine: 4198
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  syntax:
    content: Task<IEnumerable<IAlbumInfo>> IUser.GetAlbumsAsync(RequestOptions options)
    parameters:
    - id: options
      type: Gfycat.RequestOptions
    return:
      type: Task{IEnumerable{Gfycat.IAlbumInfo}}
    content.vb: Function Gfycat.IUser.GetAlbumsAsync(options As RequestOptions) As Task(Of IEnumerable(Of IAlbumInfo)) Implements IUser.GetAlbumsAsync
  overload: Gfycat.User.Gfycat#IUser#GetAlbumsAsync*
  implements:
  - Gfycat.IUser.GetAlbumsAsync(Gfycat.RequestOptions)
  nameWithType.vb: User.Gfycat.IUser.GetAlbumsAsync(RequestOptions)
  name.vb: Gfycat.IUser.GetAlbumsAsync(RequestOptions)
- uid: Gfycat.User.GetGfyFeedAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.User.GetGfyFeedAsync(Gfycat.RequestOptions)
  id: GetGfyFeedAsync(Gfycat.RequestOptions)
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: GetGfyFeedAsync(RequestOptions)
  nameWithType: User.GetGfyFeedAsync(RequestOptions)
  fullName: Gfycat.User.GetGfyFeedAsync(Gfycat.RequestOptions)
  type: Method
  source:
    id: GetGfyFeedAsync
    path: ''
    startLine: 4204
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nReturns the public gfy feed for this user\n"
  example: []
  syntax:
    content: public Task<GfyFeed> GetGfyFeedAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task{Gfycat.GfyFeed}
      description: ''
    content.vb: Public Function GetGfyFeedAsync(options As RequestOptions = Nothing) As Task(Of GfyFeed)
  overload: Gfycat.User.GetGfyFeedAsync*
  implements:
  - Gfycat.IUser.GetGfyFeedAsync(Gfycat.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gfycat.User.FollowAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.User.FollowAsync(Gfycat.RequestOptions)
  id: FollowAsync(Gfycat.RequestOptions)
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: FollowAsync(RequestOptions)
  nameWithType: User.FollowAsync(RequestOptions)
  fullName: Gfycat.User.FollowAsync(Gfycat.RequestOptions)
  type: Method
  source:
    id: FollowAsync
    path: ''
    startLine: 4213
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nFollows this user\n"
  example: []
  syntax:
    content: public Task FollowAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Public Function FollowAsync(options As RequestOptions = Nothing) As Task
  overload: Gfycat.User.FollowAsync*
  implements:
  - Gfycat.IUser.FollowAsync(Gfycat.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gfycat.User.UnfollowAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.User.UnfollowAsync(Gfycat.RequestOptions)
  id: UnfollowAsync(Gfycat.RequestOptions)
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: UnfollowAsync(RequestOptions)
  nameWithType: User.UnfollowAsync(RequestOptions)
  fullName: Gfycat.User.UnfollowAsync(Gfycat.RequestOptions)
  type: Method
  source:
    id: UnfollowAsync
    path: ''
    startLine: 4222
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nUnfollows this user\n"
  example: []
  syntax:
    content: public Task UnfollowAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task
      description: ''
    content.vb: Public Function UnfollowAsync(options As RequestOptions = Nothing) As Task
  overload: Gfycat.User.UnfollowAsync*
  implements:
  - Gfycat.IUser.UnfollowAsync(Gfycat.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Gfycat.User.GetFollowingUser(Gfycat.RequestOptions)
  commentId: M:Gfycat.User.GetFollowingUser(Gfycat.RequestOptions)
  id: GetFollowingUser(Gfycat.RequestOptions)
  parent: Gfycat.User
  langs:
  - csharp
  - vb
  name: GetFollowingUser(RequestOptions)
  nameWithType: User.GetFollowingUser(RequestOptions)
  fullName: Gfycat.User.GetFollowingUser(Gfycat.RequestOptions)
  type: Method
  source:
    id: GetFollowingUser
    path: ''
    startLine: 4231
  assemblies:
  - cs.temp.dll
  namespace: Gfycat
  summary: "\nGets whether the current user is following this user\n"
  example: []
  syntax:
    content: public Task<bool> GetFollowingUser(RequestOptions options = null)
    parameters:
    - id: options
      type: Gfycat.RequestOptions
      description: ''
    return:
      type: Task{System.Boolean}
      description: ''
    content.vb: Public Function GetFollowingUser(options As RequestOptions = Nothing) As Task(Of Boolean)
  overload: Gfycat.User.GetFollowingUser*
  implements:
  - Gfycat.IUser.GetFollowingUser(Gfycat.RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Gfycat
  commentId: N:Gfycat
  isExternal: false
  name: Gfycat
  nameWithType: Gfycat
  fullName: Gfycat
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Gfycat.Entity
  commentId: T:Gfycat.Entity
  parent: Gfycat
  isExternal: false
  name: Entity
  nameWithType: Entity
  fullName: Gfycat.Entity
- uid: Gfycat.IUser
  commentId: T:Gfycat.IUser
  parent: Gfycat
  isExternal: false
  name: IUser
  nameWithType: IUser
  fullName: Gfycat.IUser
- uid: Gfycat.IUpdatable
  commentId: T:Gfycat.IUpdatable
  parent: Gfycat
  isExternal: false
  name: IUpdatable
  nameWithType: IUpdatable
  fullName: Gfycat.IUpdatable
- uid: Gfycat.Entity.Id
  commentId: P:Gfycat.Entity.Id
  parent: Gfycat.Entity
  isExternal: false
  name: Id
  nameWithType: Entity.Id
  fullName: Gfycat.Entity.Id
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Gfycat.User.Username*
  commentId: Overload:Gfycat.User.Username
  isExternal: false
  name: Username
  nameWithType: User.Username
  fullName: Gfycat.User.Username
- uid: Gfycat.IUser.Username
  commentId: P:Gfycat.IUser.Username
  parent: Gfycat.IUser
  isExternal: false
  name: Username
  nameWithType: IUser.Username
  fullName: Gfycat.IUser.Username
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Gfycat.User.Description*
  commentId: Overload:Gfycat.User.Description
  isExternal: false
  name: Description
  nameWithType: User.Description
  fullName: Gfycat.User.Description
- uid: Gfycat.IUser.Description
  commentId: P:Gfycat.IUser.Description
  parent: Gfycat.IUser
  isExternal: false
  name: Description
  nameWithType: IUser.Description
  fullName: Gfycat.IUser.Description
- uid: Gfycat.User.ProfileUrl*
  commentId: Overload:Gfycat.User.ProfileUrl
  isExternal: false
  name: ProfileUrl
  nameWithType: User.ProfileUrl
  fullName: Gfycat.User.ProfileUrl
- uid: Gfycat.IUser.ProfileUrl
  commentId: P:Gfycat.IUser.ProfileUrl
  parent: Gfycat.IUser
  isExternal: false
  name: ProfileUrl
  nameWithType: IUser.ProfileUrl
  fullName: Gfycat.IUser.ProfileUrl
- uid: Gfycat.User.Name*
  commentId: Overload:Gfycat.User.Name
  isExternal: false
  name: Name
  nameWithType: User.Name
  fullName: Gfycat.User.Name
- uid: Gfycat.IUser.Name
  commentId: P:Gfycat.IUser.Name
  parent: Gfycat.IUser
  isExternal: false
  name: Name
  nameWithType: IUser.Name
  fullName: Gfycat.IUser.Name
- uid: Gfycat.User.Views*
  commentId: Overload:Gfycat.User.Views
  isExternal: false
  name: Views
  nameWithType: User.Views
  fullName: Gfycat.User.Views
- uid: Gfycat.IUser.Views
  commentId: P:Gfycat.IUser.Views
  parent: Gfycat.IUser
  isExternal: false
  name: Views
  nameWithType: IUser.Views
  fullName: Gfycat.IUser.Views
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Gfycat.User.Url*
  commentId: Overload:Gfycat.User.Url
  isExternal: false
  name: Url
  nameWithType: User.Url
  fullName: Gfycat.User.Url
- uid: Gfycat.IUser.Url
  commentId: P:Gfycat.IUser.Url
  parent: Gfycat.IUser
  isExternal: false
  name: Url
  nameWithType: IUser.Url
  fullName: Gfycat.IUser.Url
- uid: Gfycat.User.CreationDate*
  commentId: Overload:Gfycat.User.CreationDate
  isExternal: false
  name: CreationDate
  nameWithType: User.CreationDate
  fullName: Gfycat.User.CreationDate
- uid: Gfycat.IUser.CreationDate
  commentId: P:Gfycat.IUser.CreationDate
  parent: Gfycat.IUser
  isExternal: false
  name: CreationDate
  nameWithType: IUser.CreationDate
  fullName: Gfycat.IUser.CreationDate
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: Gfycat.User.ProfileImageUrl*
  commentId: Overload:Gfycat.User.ProfileImageUrl
  isExternal: false
  name: ProfileImageUrl
  nameWithType: User.ProfileImageUrl
  fullName: Gfycat.User.ProfileImageUrl
- uid: Gfycat.IUser.ProfileImageUrl
  commentId: P:Gfycat.IUser.ProfileImageUrl
  parent: Gfycat.IUser
  isExternal: false
  name: ProfileImageUrl
  nameWithType: IUser.ProfileImageUrl
  fullName: Gfycat.IUser.ProfileImageUrl
- uid: Gfycat.User.Verified*
  commentId: Overload:Gfycat.User.Verified
  isExternal: false
  name: Verified
  nameWithType: User.Verified
  fullName: Gfycat.User.Verified
- uid: Gfycat.IUser.Verified
  commentId: P:Gfycat.IUser.Verified
  parent: Gfycat.IUser
  isExternal: false
  name: Verified
  nameWithType: IUser.Verified
  fullName: Gfycat.IUser.Verified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Gfycat.User.Followers*
  commentId: Overload:Gfycat.User.Followers
  isExternal: false
  name: Followers
  nameWithType: User.Followers
  fullName: Gfycat.User.Followers
- uid: Gfycat.IUser.Followers
  commentId: P:Gfycat.IUser.Followers
  parent: Gfycat.IUser
  isExternal: false
  name: Followers
  nameWithType: IUser.Followers
  fullName: Gfycat.IUser.Followers
- uid: Gfycat.User.Following*
  commentId: Overload:Gfycat.User.Following
  isExternal: false
  name: Following
  nameWithType: User.Following
  fullName: Gfycat.User.Following
- uid: Gfycat.IUser.Following
  commentId: P:Gfycat.IUser.Following
  parent: Gfycat.IUser
  isExternal: false
  name: Following
  nameWithType: IUser.Following
  fullName: Gfycat.IUser.Following
- uid: Gfycat.User.IframeProfileImageVisible*
  commentId: Overload:Gfycat.User.IframeProfileImageVisible
  isExternal: false
  name: IframeProfileImageVisible
  nameWithType: User.IframeProfileImageVisible
  fullName: Gfycat.User.IframeProfileImageVisible
- uid: Gfycat.IUser.IframeProfileImageVisible
  commentId: P:Gfycat.IUser.IframeProfileImageVisible
  parent: Gfycat.IUser
  isExternal: false
  name: IframeProfileImageVisible
  nameWithType: IUser.IframeProfileImageVisible
  fullName: Gfycat.IUser.IframeProfileImageVisible
- uid: Gfycat.User.PublishedGfys*
  commentId: Overload:Gfycat.User.PublishedGfys
  isExternal: false
  name: PublishedGfys
  nameWithType: User.PublishedGfys
  fullName: Gfycat.User.PublishedGfys
- uid: Gfycat.IUser.PublishedGfys
  commentId: P:Gfycat.IUser.PublishedGfys
  parent: Gfycat.IUser
  isExternal: false
  name: PublishedGfys
  nameWithType: IUser.PublishedGfys
  fullName: Gfycat.IUser.PublishedGfys
- uid: Gfycat.User.PublishedAlbums*
  commentId: Overload:Gfycat.User.PublishedAlbums
  isExternal: false
  name: PublishedAlbums
  nameWithType: User.PublishedAlbums
  fullName: Gfycat.User.PublishedAlbums
- uid: Gfycat.IUser.PublishedAlbums
  commentId: P:Gfycat.IUser.PublishedAlbums
  parent: Gfycat.IUser
  isExternal: false
  name: PublishedAlbums
  nameWithType: IUser.PublishedAlbums
  fullName: Gfycat.IUser.PublishedAlbums
- uid: Gfycat.User.UpdateAsync*
  commentId: Overload:Gfycat.User.UpdateAsync
  isExternal: false
  name: UpdateAsync
  nameWithType: User.UpdateAsync
  fullName: Gfycat.User.UpdateAsync
- uid: Gfycat.IUpdatable.UpdateAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.IUpdatable.UpdateAsync(Gfycat.RequestOptions)
  parent: Gfycat.IUpdatable
  isExternal: false
  name: UpdateAsync(RequestOptions)
  nameWithType: IUpdatable.UpdateAsync(RequestOptions)
  fullName: Gfycat.IUpdatable.UpdateAsync(Gfycat.RequestOptions)
  spec.csharp:
  - uid: Gfycat.IUpdatable.UpdateAsync(Gfycat.RequestOptions)
    name: UpdateAsync
    nameWithType: IUpdatable.UpdateAsync
    fullName: Gfycat.IUpdatable.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gfycat.IUpdatable.UpdateAsync(Gfycat.RequestOptions)
    name: UpdateAsync
    nameWithType: IUpdatable.UpdateAsync
    fullName: Gfycat.IUpdatable.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Gfycat.RequestOptions
  commentId: T:Gfycat.RequestOptions
  parent: Gfycat
  isExternal: false
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Gfycat.RequestOptions
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Gfycat.User.GetAlbumsAsync*
  commentId: Overload:Gfycat.User.GetAlbumsAsync
  isExternal: false
  name: GetAlbumsAsync
  nameWithType: User.GetAlbumsAsync
  fullName: Gfycat.User.GetAlbumsAsync
- uid: Task{IEnumerable{Gfycat.AlbumInfo}}
  commentId: '!:Task{IEnumerable{Gfycat.AlbumInfo}}'
  definition: Task`1
  name: Task<IEnumerable<AlbumInfo>>
  nameWithType: Task<IEnumerable<AlbumInfo>>
  fullName: Task<IEnumerable<Gfycat.AlbumInfo>>
  nameWithType.vb: Task(Of IEnumerable(Of AlbumInfo))
  fullName.vb: Task(Of IEnumerable(Of Gfycat.AlbumInfo))
  name.vb: Task(Of IEnumerable(Of AlbumInfo))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Gfycat.AlbumInfo
    name: AlbumInfo
    nameWithType: AlbumInfo
    fullName: Gfycat.AlbumInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Gfycat.AlbumInfo
    name: AlbumInfo
    nameWithType: AlbumInfo
    fullName: Gfycat.AlbumInfo
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Gfycat.User.Gfycat#IUser#GetAlbumsAsync*
  commentId: Overload:Gfycat.User.Gfycat#IUser#GetAlbumsAsync
  isExternal: false
  name: IUser.GetAlbumsAsync
  nameWithType: User.IUser.GetAlbumsAsync
  fullName: Gfycat.User.Gfycat.IUser.GetAlbumsAsync
  nameWithType.vb: User.Gfycat.IUser.GetAlbumsAsync
  name.vb: Gfycat.IUser.GetAlbumsAsync
- uid: Gfycat.IUser.GetAlbumsAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.IUser.GetAlbumsAsync(Gfycat.RequestOptions)
  parent: Gfycat.IUser
  isExternal: false
  name: GetAlbumsAsync(RequestOptions)
  nameWithType: IUser.GetAlbumsAsync(RequestOptions)
  fullName: Gfycat.IUser.GetAlbumsAsync(Gfycat.RequestOptions)
  spec.csharp:
  - uid: Gfycat.IUser.GetAlbumsAsync(Gfycat.RequestOptions)
    name: GetAlbumsAsync
    nameWithType: IUser.GetAlbumsAsync
    fullName: Gfycat.IUser.GetAlbumsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gfycat.IUser.GetAlbumsAsync(Gfycat.RequestOptions)
    name: GetAlbumsAsync
    nameWithType: IUser.GetAlbumsAsync
    fullName: Gfycat.IUser.GetAlbumsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{IEnumerable{Gfycat.IAlbumInfo}}
  commentId: '!:Task{IEnumerable{Gfycat.IAlbumInfo}}'
  definition: Task`1
  name: Task<IEnumerable<IAlbumInfo>>
  nameWithType: Task<IEnumerable<IAlbumInfo>>
  fullName: Task<IEnumerable<Gfycat.IAlbumInfo>>
  nameWithType.vb: Task(Of IEnumerable(Of IAlbumInfo))
  fullName.vb: Task(Of IEnumerable(Of Gfycat.IAlbumInfo))
  name.vb: Task(Of IEnumerable(Of IAlbumInfo))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Gfycat.IAlbumInfo
    name: IAlbumInfo
    nameWithType: IAlbumInfo
    fullName: Gfycat.IAlbumInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Gfycat.IAlbumInfo
    name: IAlbumInfo
    nameWithType: IAlbumInfo
    fullName: Gfycat.IAlbumInfo
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Gfycat.User.GetGfyFeedAsync*
  commentId: Overload:Gfycat.User.GetGfyFeedAsync
  isExternal: false
  name: GetGfyFeedAsync
  nameWithType: User.GetGfyFeedAsync
  fullName: Gfycat.User.GetGfyFeedAsync
- uid: Gfycat.IUser.GetGfyFeedAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.IUser.GetGfyFeedAsync(Gfycat.RequestOptions)
  parent: Gfycat.IUser
  isExternal: false
  name: GetGfyFeedAsync(RequestOptions)
  nameWithType: IUser.GetGfyFeedAsync(RequestOptions)
  fullName: Gfycat.IUser.GetGfyFeedAsync(Gfycat.RequestOptions)
  spec.csharp:
  - uid: Gfycat.IUser.GetGfyFeedAsync(Gfycat.RequestOptions)
    name: GetGfyFeedAsync
    nameWithType: IUser.GetGfyFeedAsync
    fullName: Gfycat.IUser.GetGfyFeedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gfycat.IUser.GetGfyFeedAsync(Gfycat.RequestOptions)
    name: GetGfyFeedAsync
    nameWithType: IUser.GetGfyFeedAsync
    fullName: Gfycat.IUser.GetGfyFeedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{Gfycat.GfyFeed}
  commentId: '!:Task{Gfycat.GfyFeed}'
  definition: Task`1
  name: Task<GfyFeed>
  nameWithType: Task<GfyFeed>
  fullName: Task<Gfycat.GfyFeed>
  nameWithType.vb: Task(Of GfyFeed)
  fullName.vb: Task(Of Gfycat.GfyFeed)
  name.vb: Task(Of GfyFeed)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Gfycat.GfyFeed
    name: GfyFeed
    nameWithType: GfyFeed
    fullName: Gfycat.GfyFeed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Gfycat.GfyFeed
    name: GfyFeed
    nameWithType: GfyFeed
    fullName: Gfycat.GfyFeed
  - name: )
    nameWithType: )
    fullName: )
- uid: Gfycat.User.FollowAsync*
  commentId: Overload:Gfycat.User.FollowAsync
  isExternal: false
  name: FollowAsync
  nameWithType: User.FollowAsync
  fullName: Gfycat.User.FollowAsync
- uid: Gfycat.IUser.FollowAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.IUser.FollowAsync(Gfycat.RequestOptions)
  parent: Gfycat.IUser
  isExternal: false
  name: FollowAsync(RequestOptions)
  nameWithType: IUser.FollowAsync(RequestOptions)
  fullName: Gfycat.IUser.FollowAsync(Gfycat.RequestOptions)
  spec.csharp:
  - uid: Gfycat.IUser.FollowAsync(Gfycat.RequestOptions)
    name: FollowAsync
    nameWithType: IUser.FollowAsync
    fullName: Gfycat.IUser.FollowAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gfycat.IUser.FollowAsync(Gfycat.RequestOptions)
    name: FollowAsync
    nameWithType: IUser.FollowAsync
    fullName: Gfycat.IUser.FollowAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Gfycat.User.UnfollowAsync*
  commentId: Overload:Gfycat.User.UnfollowAsync
  isExternal: false
  name: UnfollowAsync
  nameWithType: User.UnfollowAsync
  fullName: Gfycat.User.UnfollowAsync
- uid: Gfycat.IUser.UnfollowAsync(Gfycat.RequestOptions)
  commentId: M:Gfycat.IUser.UnfollowAsync(Gfycat.RequestOptions)
  parent: Gfycat.IUser
  isExternal: false
  name: UnfollowAsync(RequestOptions)
  nameWithType: IUser.UnfollowAsync(RequestOptions)
  fullName: Gfycat.IUser.UnfollowAsync(Gfycat.RequestOptions)
  spec.csharp:
  - uid: Gfycat.IUser.UnfollowAsync(Gfycat.RequestOptions)
    name: UnfollowAsync
    nameWithType: IUser.UnfollowAsync
    fullName: Gfycat.IUser.UnfollowAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gfycat.IUser.UnfollowAsync(Gfycat.RequestOptions)
    name: UnfollowAsync
    nameWithType: IUser.UnfollowAsync
    fullName: Gfycat.IUser.UnfollowAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Gfycat.User.GetFollowingUser*
  commentId: Overload:Gfycat.User.GetFollowingUser
  isExternal: false
  name: GetFollowingUser
  nameWithType: User.GetFollowingUser
  fullName: Gfycat.User.GetFollowingUser
- uid: Gfycat.IUser.GetFollowingUser(Gfycat.RequestOptions)
  commentId: M:Gfycat.IUser.GetFollowingUser(Gfycat.RequestOptions)
  parent: Gfycat.IUser
  isExternal: false
  name: GetFollowingUser(RequestOptions)
  nameWithType: IUser.GetFollowingUser(RequestOptions)
  fullName: Gfycat.IUser.GetFollowingUser(Gfycat.RequestOptions)
  spec.csharp:
  - uid: Gfycat.IUser.GetFollowingUser(Gfycat.RequestOptions)
    name: GetFollowingUser
    nameWithType: IUser.GetFollowingUser
    fullName: Gfycat.IUser.GetFollowingUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Gfycat.IUser.GetFollowingUser(Gfycat.RequestOptions)
    name: GetFollowingUser
    nameWithType: IUser.GetFollowingUser
    fullName: Gfycat.IUser.GetFollowingUser
  - name: (
    nameWithType: (
    fullName: (
  - uid: Gfycat.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Gfycat.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{System.Boolean}
  commentId: '!:Task{System.Boolean}'
  definition: Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
